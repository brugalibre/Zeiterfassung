plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'eclipse'
    id 'java'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
	// https://mvnrepository.com/artifact/log4j/log4j
	implementation group: 'log4j', name: 'log4j', version: '1.2.17'
	
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
	
	// https://mvnrepository.com/artifact/org.mockito/mockito-core
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.22.0'
   
  	// https://mvnrepository.com/artifact/org.hamcrest/hamcrest-all
	testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    // Use JUnit test framework.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:'
    
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.1'
	
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
	
	implementation project(':Zeiterfassung_Core_Api')
	implementation project(':Zeiterfassung_Common_Api')
	implementation project(':zeiterfassung-jira-api')
	implementation project(':Zeiterfassung_Auth')
	implementation project(':zeiterfassung-book-api')
}

sourceSets {
    integTest{
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}